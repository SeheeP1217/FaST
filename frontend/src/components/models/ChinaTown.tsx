/* eslint-disable react/jsx-props-no-spreading */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ChinaTown.glb --types
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Cube_1: THREE.Mesh;
    Cube_2: THREE.Mesh;
    Cube_3: THREE.Mesh;
    Cube_4: THREE.Mesh;
    Cube_5: THREE.Mesh;
    Cube_6: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
    ['Material.001']: THREE.MeshStandardMaterial;
    ['Material.002']: THREE.MeshStandardMaterial;
    ['Material.003']: THREE.MeshStandardMaterial;
    ['Material.004']: THREE.MeshStandardMaterial;
    ['Material.005']: THREE.MeshStandardMaterial;
  };
};

export default function Model({ transX, transY }: any) {
  const { nodes, materials } = useGLTF('/models/ChinaTown.glb') as GLTFResult;

  return (
    <group dispose={null} position={[0, -3, 0]} receiveShadow>
      <group
        position={[0, 4.18, 0]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[0.5, 0.25, 0.5]}
      >
        <mesh geometry={nodes.Cube_1.geometry} material={materials.Material} />
        <mesh
          geometry={nodes.Cube_2.geometry}
          material={materials['Material.001']}
        />
        <mesh
          geometry={nodes.Cube_3.geometry}
          material={materials['Material.002']}
        />
        <mesh
          geometry={nodes.Cube_4.geometry}
          material={materials['Material.003']}
        />
        <mesh
          geometry={nodes.Cube_5.geometry}
          material={materials['Material.004']}
        />
        <mesh
          geometry={nodes.Cube_6.geometry}
          material={materials['Material.005']}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/models/ChinaTown.glb');
