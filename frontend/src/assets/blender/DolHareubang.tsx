/* eslint-disable react/jsx-props-no-spreading */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 DolHareubang.glb --types
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { Group } from 'three';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    Sphere003: THREE.Mesh;
  };
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial;
  };
};

export default function Model({ transX, transY }: any) {
  const { nodes, materials } = useGLTF(
    '/models/DolHareubang.glb'
  ) as GLTFResult;
  const modelRef = useRef<Group>(null);
  useFrame(() => {
    if (modelRef.current !== null && transX && transY) {
      modelRef.current.rotation.y += transX / 3000;
      modelRef.current.rotation.x += transY / 3000;
    }
  });
  return (
    <group dispose={null} ref={modelRef} position={[0, -2, -1]}>
      <mesh
        geometry={nodes.Sphere003.geometry}
        material={materials['Material.001']}
        position={[0.82, 3.69, 0]}
        rotation={[0, 0, 0.21]}
        scale={[0.45, 0.75, 0.7]}
      />
    </group>
  );
}

useGLTF.preload('/models/DolHareubang.glb');
