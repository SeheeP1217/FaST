/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 logo.glb -t
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { GLTF } from 'three-stdlib';
import { Mesh } from 'three';

type GLTFResult = GLTF & {
  nodes: {
    텍스트: THREE.Mesh;
  };
  materials: {
    T: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/logo.glb') as GLTFResult;
  const logoRef = useRef<Mesh>(null);
  useFrame(() => {
    if (logoRef.current !== null) logoRef.current.rotation.z += 0.01;
  });
  return (
    <mesh
      ref={logoRef}
      // eslint-disable-next-line react/no-unknown-property
      geometry={nodes.텍스트.geometry}
      // eslint-disable-next-line react/no-unknown-property
      material={materials.T}
      // eslint-disable-next-line react/no-unknown-property
      rotation={[Math.PI / 2, 0, 0]}
    />
  );
}

useGLTF.preload('/logo.glb');
