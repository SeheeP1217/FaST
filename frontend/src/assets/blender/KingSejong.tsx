/* eslint-disable react/jsx-props-no-spreading */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 KingSejong.glb --types
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { Group } from 'three';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    Cube001: THREE.Mesh;
    Sphere003: THREE.Mesh;
    Plane001: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
    ['Material.001']: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/KingSejong.glb') as GLTFResult;
  const modelRef = useRef<Group>(null);
  useFrame(() => {
    if (modelRef.current !== null) modelRef.current.rotation.y += 0.01;
  });
  return (
    <group {...props} dispose={null} ref={modelRef} position={[0, -1, 0]}>
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials.Material}
        scale={[1.5, 0.65, 1]}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={materials.Material}
        position={[0, 1.3, -0.05]}
        scale={[0.8, 0.1, 0.6]}
      />
      <mesh
        geometry={nodes.Sphere003.geometry}
        material={materials['Material.001']}
        position={[0, 2.26, -0.2]}
        scale={[0.2, 0.1, 0.13]}
      />
      <mesh
        geometry={nodes.Plane001.geometry}
        material={materials['Material.001']}
        position={[0, 2.15, -0.07]}
        scale={[0.25, 1, 0.25]}
      />
    </group>
  );
}

useGLTF.preload('/models/KingSejong.glb');
