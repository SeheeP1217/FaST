/* eslint-disable react/jsx-props-no-spreading */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Gwangandaegyo.glb --types
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { Group } from 'three';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    Cube004_1: THREE.Mesh;
    Cube004_2: THREE.Mesh;
    Cube004_3: THREE.Mesh;
    NurbsPath018: THREE.Mesh;
  };
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial;
    ['Material.002']: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/models/Gwangandaegyo.glb'
  ) as GLTFResult;
  const modelRef = useRef<Group>(null);
  useFrame(() => {
    if (modelRef.current !== null) modelRef.current.rotation.y += 0.01;
  });
  return (
    <group {...props} dispose={null} ref={modelRef}>
      <group position={[2, 0, 0]} scale={[0.32, 0.03, 0.32]}>
        <mesh
          geometry={nodes.Cube004_1.geometry}
          material={materials['Material.001']}
        />
        <mesh
          geometry={nodes.Cube004_2.geometry}
          material={materials['Material.002']}
        />
        <mesh
          geometry={nodes.Cube004_3.geometry}
          material={materials.Material}
        />
      </group>
      <mesh
        geometry={nodes.NurbsPath018.geometry}
        material={materials['Material.001']}
        position={[1.26, 0.54, -0.17]}
        rotation={[0, 0, Math.PI / 2]}
        scale={[0.07, 1, 1]}
      />
    </group>
  );
}

useGLTF.preload('/models/Gwangandaegyo.glb');
